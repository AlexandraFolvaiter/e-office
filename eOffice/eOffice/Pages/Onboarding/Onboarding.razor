@page "/onboardings"

<PageTitle>Onboarding</PageTitle>

@using eOffice.Onboarding.Models
@using eOffice.Services.Contracts
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage


@inject NavigationManager _nav
@inject IOnboardingService _onboardingService;
@inject ProtectedLocalStorage BrowserStorage

<h1>Onboardings</h1>

<p>This component is for onboarding new employees.</p>

<RadzenButton Text="Onboard a new employee" Icon="add_circle_outline" Click="NavigateToAdd" ButtonStyle="ButtonStyle.Info" Style="margin-bottom: 20px;" />

@if (_onboardings == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowSorting="true" PageSize="10" AllowPaging="true" ShowPagingSummary="true" Data="@_onboardings" TItem="OnboardingGetModel" ColumnWidth="300px">
        <Columns>
            <RadzenDataGridColumn TItem="OnboardingGetModel" Property="IsComplete" Title="Status" Filterable="false" Frozen="true" Width="50px">
                <Template Context="model">
                    <div>
                        @if (model.IsComplete)
                        {
                            <RadzenButton Icon="check_circle" ButtonStyle="ButtonStyle.Success" Text="Completed" />
                        }
                        else
                        {
                            <RadzenButton Icon="warning_amber" ButtonStyle="ButtonStyle.Warning" Text="Pending" />
                        }
                    </div>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="OnboardingGetModel" Property="Name" Filterable="false" Title="For" Frozen="true" Width="140px" />
            <RadzenDataGridColumn TItem="OnboardingGetModel" Property="CreatedDate" Title="Created Date" Frozen="true" Width="70px" />
            <RadzenDataGridColumn TItem="OnboardingGetModel" Sortable="false" Filterable="false" Title="Actions" Width="60px">
                <Template Context="data">
                    <RadzenButton ButtonStyle="ButtonStyle.Info" Text="See details" Click="() => NavigateToDetails(data.Id)" Icon="north_east" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

@code {
    private IList<OnboardingGetModel> _onboardings;
    private Guid userId;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            userId = (await BrowserStorage.GetAsync<Guid>("userId")).Value;
            _onboardings = await _onboardingService.GetAll(userId);
            StateHasChanged();
        }
    }

    private void NavigateToAdd()
    {
        _nav.NavigateTo("onboardings/add-new");
    }

    private void NavigateToDetails(Guid id)
    {
        _nav.NavigateTo($"onboardings/details/{id}");
    }
}
