@page "/onboardings"

<PageTitle>Onboarding</PageTitle>

@using eOffice.Onboarding.Models


@inject NavigationManager _nav

<h1>Onboardings</h1>

<p>This component is for onboarding new employees.</p>

<RadzenButton Text="Onboard a new employee" Icon="add_circle_outline" Click="() => NavigateToAdd()" />

@if (_onboardings == null)
{
    <p><em>Loading...</em></p>
}
else
{
 <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowSorting="true" PageSize="10" AllowPaging="true" ShowPagingSummary="true" Data="@_onboardings" TItem="OnboardingModel" ColumnWidth="300px" >
    <Columns>
        <RadzenDataGridColumn TItem="OnboardingModel" Property="EmployeeID" Filterable="false" Title="Status" Frozen="true" Width="70px"/>
        <RadzenDataGridColumn TItem="OnboardingModel" Property="EmployeeID" Filterable="false" Title="ID" Frozen="true" Width="70px"/>
        <RadzenDataGridColumn TItem="OnboardingModel" Property="FirstName" Title="First Name" Frozen="true" Width="140px" />
        <RadzenDataGridColumn TItem="OnboardingModel" Property="LastName" Title="Last Name" Width="140px" />
        <RadzenDataGridColumn TItem="OnboardingModel" Sortable="false" Filterable="false" Title="Actions" Width="60px">
            <Template Context="data">
                    <RadzenButton ButtonStyle="ButtonStyle.Info" Text="See details" Icon="north_east"/>
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>
}

@code {
    private IList<OnboardingModel> _onboardings = new List<OnboardingModel>();

    protected override async Task OnInitializedAsync()
    {
        _onboardings.Add(new OnboardingModel());
        _onboardings.Add(new OnboardingModel());
        _onboardings.Add(new OnboardingModel());
    }

    private void NavigateToAdd() {
        _nav.NavigateTo("onboardings/add-new");
    }
}
